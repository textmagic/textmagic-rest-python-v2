# coding: utf-8

"""
    TextMagic API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetMessageSessionStatResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'failed': 'int',
        'delivered': 'int',
        'accepted': 'int',
        'rejected': 'int',
        'scheduled': 'int',
        'all': 'int',
        'sent': 'int'
    }

    attribute_map = {
        'failed': 'failed',
        'delivered': 'delivered',
        'accepted': 'accepted',
        'rejected': 'rejected',
        'scheduled': 'scheduled',
        'all': 'all',
        'sent': 'sent'
    }

    def __init__(self, failed=None, delivered=None, accepted=None, rejected=None, scheduled=None, all=None, sent=None):  # noqa: E501
        """GetMessageSessionStatResponse - a model defined in Swagger"""  # noqa: E501

        self._failed = None
        self._delivered = None
        self._accepted = None
        self._rejected = None
        self._scheduled = None
        self._all = None
        self._sent = None
        self.discriminator = None

        self.failed = failed
        self.delivered = delivered
        self.accepted = accepted
        self.rejected = rejected
        self.scheduled = scheduled
        self.all = all
        self.sent = sent

    @property
    def failed(self):
        """Gets the failed of this GetMessageSessionStatResponse.  # noqa: E501

        Amount of failed messages.  # noqa: E501

        :return: The failed of this GetMessageSessionStatResponse.  # noqa: E501
        :rtype: int
        """
        return self._failed

    @failed.setter
    def failed(self, failed):
        """Sets the failed of this GetMessageSessionStatResponse.

        Amount of failed messages.  # noqa: E501

        :param failed: The failed of this GetMessageSessionStatResponse.  # noqa: E501
        :type: int
        """

        self._failed = failed

    @property
    def delivered(self):
        """Gets the delivered of this GetMessageSessionStatResponse.  # noqa: E501

        Amount of delivered messages.  # noqa: E501

        :return: The delivered of this GetMessageSessionStatResponse.  # noqa: E501
        :rtype: int
        """
        return self._delivered

    @delivered.setter
    def delivered(self, delivered):
        """Sets the delivered of this GetMessageSessionStatResponse.

        Amount of delivered messages.  # noqa: E501

        :param delivered: The delivered of this GetMessageSessionStatResponse.  # noqa: E501
        :type: int
        """

        self._delivered = delivered

    @property
    def accepted(self):
        """Gets the accepted of this GetMessageSessionStatResponse.  # noqa: E501

        Amount of accepted messages.  # noqa: E501

        :return: The accepted of this GetMessageSessionStatResponse.  # noqa: E501
        :rtype: int
        """
        return self._accepted

    @accepted.setter
    def accepted(self, accepted):
        """Sets the accepted of this GetMessageSessionStatResponse.

        Amount of accepted messages.  # noqa: E501

        :param accepted: The accepted of this GetMessageSessionStatResponse.  # noqa: E501
        :type: int
        """

        self._accepted = accepted

    @property
    def rejected(self):
        """Gets the rejected of this GetMessageSessionStatResponse.  # noqa: E501

        Amount of rejected messages.  # noqa: E501

        :return: The rejected of this GetMessageSessionStatResponse.  # noqa: E501
        :rtype: int
        """
        return self._rejected

    @rejected.setter
    def rejected(self, rejected):
        """Sets the rejected of this GetMessageSessionStatResponse.

        Amount of rejected messages.  # noqa: E501

        :param rejected: The rejected of this GetMessageSessionStatResponse.  # noqa: E501
        :type: int
        """

        self._rejected = rejected

    @property
    def scheduled(self):
        """Gets the scheduled of this GetMessageSessionStatResponse.  # noqa: E501

        Amount of scheduled messages.  # noqa: E501

        :return: The scheduled of this GetMessageSessionStatResponse.  # noqa: E501
        :rtype: int
        """
        return self._scheduled

    @scheduled.setter
    def scheduled(self, scheduled):
        """Sets the scheduled of this GetMessageSessionStatResponse.

        Amount of scheduled messages.  # noqa: E501

        :param scheduled: The scheduled of this GetMessageSessionStatResponse.  # noqa: E501
        :type: int
        """

        self._scheduled = scheduled

    @property
    def all(self):
        """Gets the all of this GetMessageSessionStatResponse.  # noqa: E501

        Total amount of messages.  # noqa: E501

        :return: The all of this GetMessageSessionStatResponse.  # noqa: E501
        :rtype: int
        """
        return self._all

    @all.setter
    def all(self, all):
        """Sets the all of this GetMessageSessionStatResponse.

        Total amount of messages.  # noqa: E501

        :param all: The all of this GetMessageSessionStatResponse.  # noqa: E501
        :type: int
        """

        self._all = all

    @property
    def sent(self):
        """Gets the sent of this GetMessageSessionStatResponse.  # noqa: E501

        Amount of sent but not yet delivered messages.  # noqa: E501

        :return: The sent of this GetMessageSessionStatResponse.  # noqa: E501
        :rtype: int
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this GetMessageSessionStatResponse.

        Amount of sent but not yet delivered messages.  # noqa: E501

        :param sent: The sent of this GetMessageSessionStatResponse.  # noqa: E501
        :type: int
        """

        self._sent = sent

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetMessageSessionStatResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetMessageSessionStatResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
